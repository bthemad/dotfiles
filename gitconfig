[user]
    name = Alex Kudryashov
    email = alex.kudryashov@gmail.com
[color]
    ui = true
[push]
    default = current
[alias]
    s = status
    b = branch
    ba = branch -a -v -v
    ci = commit
    co = checkout

    d = diff -C
    ds = diff -C --stat
    dsp = diff -C --stat -p
    dw = diff -C --color-words

    l = log -C --decorate
    ls = log -C --stat --decorate
    lsp = log -C --stat -p --decorate
    lg = log --graph '--pretty=tformat:%Cblue%h%Creset %Cgreen%ar%Creset %Cblue%d%Creset %s'
    lga = log --graph '--pretty=tformat:%Cblue%h%Creset %Cgreen%ar%Creset %Cblue%d%Creset %s' --all
    lsd = log --graph '--pretty=tformat:%Cblue%h%Creset %Cgreen%ar%Creset %Cblue%d%Creset %s' --all --simplify-by-decoration

    ru = remote update
    sb = show-branch --sha1-name
    ls-del = ls-files -d
    ls-mod = ls-files -m
    ls-new = ls-files --exclude-standard -o
    ls-ign = ls-files --exclude-standard -o -i

    hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
    type = cat-file -t
    dump = cat-file -p

    fs = "!git ls-files | grep -i"
    gr = grep -Ii

    grr = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
    fsr = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git ls-files | grep -i $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    sl = stash list
    ss = stash save
    ssp = stash save -p
    sp = stash pop
    sa = stash apply

    svf = svn fetch
    svr = svn rebase -l
    svl = svn log --oneline --show-commit

    r = reset
    r1 = reset HEAD^
    rh = reset --hard
    rh1 = reset HEAD^ --hard

    prstash = "!f() { git fetch $1 refs/pull-requests/$2/from:$3; } ; f"
    create-pull-request = !sh -c 'stash pull-request $0'

[core]
    editor = /Applications/MacVim.app/Contents/MacOS/Vim
    excludesfile = /Users/alex/.gitignore
